import { sum } from '../app.js';

let result;
let testOk = 0;
let testFailed = 0;
// Algunos escenarios a plantear podr√≠an ser:

// La funci√≥n debe devolver null si alg√∫n par√°metro no es num√©rico.
console.log('Test 1. La funci√≥n debe devolver null si alg√∫n par√°metro no es num√©rico.');
result = sum(1, true);
if (result === null) {
  testOk++;
  console.log('‚úÖ Test 1 ha pasado con √©xito');
} else {
  testFailed++;
  console.log('üò± Test 1 ha fallado');
}

// La funci√≥n debe devolver 0 si no se pas√≥ ning√∫n par√°metro
console.log('Test 2. La funci√≥n debe devolver 0 si no se pas√≥ ning√∫n par√°metro.');
result = sum();
if (result === 0) {
  testOk++;
  console.log('‚úÖ Test 2 ha pasado con √©xito');
} else {
  testFailed++;
  console.log('üò± Test 2 ha fallado');
}

// La funci√≥n debe poder realizar la suma correctamente.
console.log('Test 3. La funci√≥n debe poder realizar la suma correctamente.');
result = sum(2, 3);
if (result === 5) {
  testOk++;
  console.log('‚úÖ Test 3 ha pasado con √©xito');
} else {
  testFailed++;
  console.log('üò± Test 3 ha fallado');
}

// La funci√≥n debe poder hacer la suma con cualquier cantidad de n√∫meros.
console.log('Test 4. La funci√≥n debe poder hacer la suma con cualquier cantidad de n√∫meros.');
result = sum(2, 3, 6);
if (result === 11) {
  testOk++;
  console.log('‚úÖ Test 4 ha pasado con √©xito');
} else {
  testFailed++;
  console.log('üò± Test 4 ha fallado');
}

console.log('Resumen:');
console.log('Pruebas exitosas:', testOk);
console.log('Pruebas fallidas:', testFailed);